Plan 1
1.	Preparation
1.1.	HTML CSS (сайт-визитка)
1.2.	Git. Базовый курс
Введение в Git
markdown
Установка и настройка Git
Основные команды терминала 
Работа с репозиториями в Git 
Управление файлами репозитория
История изменений
Работа с ветками репозитория
Публикация репозитория
Слияния веток
Управление версиями
Создание pull request
Сложные операции
Работа с fork-репозиториями
1.3.	Консольный файловый менеджер (python)
2.	Введение в backend-разработку
2.1. Декораторы 
2.2. Работа с файловой системой. Исключения в Python
2.3. Генераторы и comprehensions.
2.4. OOP
2.5. Введение в скрипты Bash. Планировщики задач crontab и at
2.6. Управление пакетами и репозиториями. Основы сетевой безопасности
2.7. Docker
3. MySQL
	Установка окружения. DDL-команды
Управление БД. Язык запросов SQL
Введение в проектирование БД
CRUD-операции
Операторы, фильтрация, сортировка и ограничение. Агрегация данных
Сложные запросы
Транзакции, переменные, представления. Администрирование. Хранимые процедуры и функции, триггеры
Оптимизация запросов. NoSQL
4. Хеш-функция
5. Алгоритмы сортировки



Plan 2
1.	HTML/CSS.
1.1.	Основные понятия в веб-разработке
1.2.	Основы языка разметки документов HTML
1.3.	Основы языка оформления стилей документа CSS
1.4.	Основные теги для вёрстки, псевдоклассы и псевдоэлементы
1.5.	Основы позиционирования, работа с Flexbox
1.6.	Работа с макетом дизайна в формате Figma
1.7.	Основы создания адаптивного сайта
1.8.	Стандарты веб и вспомогательные инструменты
2.	Базовый курс JavaScript
2.1.	Основы языка JavaScript
2.2.	Основные операторы JavaScript
2.3.	Циклы, массивы, структуры данных
2.4.	Объекты в JavaScript
2.5.	Введение в DOM
2.6.	Обработка событий в JavaScript
2.7.	Урок-практикум
2.8.	Анонимные функции, замыкания
3.	Основы Django Framework
3.1.	Знакомство с фреймворком
3.2.	Шаблон + контекст = HTML
3.3.	Модели + ORM = данные
3.4.	Аутентификация и регистрация пользователя
3.5.	Пользователь + товар = корзина
3.6.	Корзина + AJAX + декораторы
3.7.	Собственная админка
3.8.	Полезное: страничный вывод, шаблонные фильтры, CBV
4.	Django Framework. Инструменты оптимизации
4.1.	Отправка электронной почты. Контекстные процессоры
4.2.	Регистрация через социальную сеть. Django ORM: связь «один к одному»
4.3.	Работа с заказом пользователя: CBV, Django formsets
4.4.	Работа с заказом пользователя: обновляем остатки товара, добавляем код jQuery
4.5.	Развёртывание Django-проекта на VPS от REG.RU
4.6.	Профилирование и нагрузочное тестирование проекта, оптимизация работы с базой данных
4.7.	Ещё быстрее: кеширование в Django
4.8.	Продвинутая работа с Django ORM. Тестирование в Django
5.	Django REST framework
5.1.	Введение в REST и Django REST framework
5.2.	Введение в React. Компонентный подход
5.3.	Serializers. Renderers. Routers
5.4.	Views. Filtering. Pagination
5.5.	Routing. SPA
5.6.	Авторизация. Система прав
5.7.	Авторизация на стороне клиента
5.8.	Тестирование API. Фабрики данных
5.9.	Система версий API. Документация для API
5.10.	GraphQl
5.11.	Работа с формами. Сборка проекта для production
5.12.	Развертывание проекта с docker и docker-compose
6.	Создадите интернет-магазин с нуля, состоящий из главной страницы, каталога, таблиц под каждый товар, корзины, разделов «Контакты» и «О компании».
Изучите Django Framework: менеджеры моделей, отправка почтовых сообщений, создание и оптимизация сложных запросов к базе данных, работа с наборами форм, развёртывание Django-проекта на web-сервере и тестирование.
В финале четверти познакомитесь с Django REST Framework в связке с ReactJS и создадите ещё один проект — ToDo планировщик с разделением ролей, собственным API и документацией.

Plan 3 Сетевой чат
1.	Клиент-серверные приложения на Python
1.1.	Концепции хранения информации
1.2.	Файловое хранение данных
1.3.	Основы сетевого программирования
1.4.	Основы тестирования
1.5.	Логирование
1.6.	Декораторы и продолжение работы с сетью
1.7.	Модуль select, слоты
1.8.	Потоки
2.	Базы данных и PyQT
2.1.    Полезные модули
2.2.    Дескрипторы и метаклассы
2.3.    Хранение данных в БД. ORM SQLAlchemy
2.4.    ранение данных в БД (продолжение) и основы Qt
2.5.    Qt (продолжение), Qt и потоки
2.6.    Безопасность
2.7.    PEP-8, подготовка документации
2.8.    Подготовка дистрибутива

Plan 4 
Patterns
1. Архитектура и шаблоны проектирования на Python
1.1.    Паттерны веб-представления
1.2.    Архитектура Python-приложений
1.3.    Принципы проектирования
1.4.    Порождающие паттерны
1.5.    Структурные паттерны
1.6.    Поведенческие паттерны
1.7.    Архитектурные системные паттерны
1.8.    Антипаттерны
1.9.    Микросервисная архитектура

2. Pазработка по методологии Agile/Scrum
2.1.    Введение в Agile
2.2.    Scrum, Kanban, Scrumban

Plan 5 
1. Компьютерные сети
1.1.    Основы компьютерных сетей. Технология Ethernet. Часть 1.
1.2.    Физический и канальный уровень. Технология Ethernet. Часть 2
1.3.    Сетевой уровень. 
1.4.    Транспортный уровень
1.5.    Углублённое изучение сетевых технологий.

2. JavaScript
2.1.    Современный JavaScript
2.2.    ООП в JavaScript
2.3.    Асинхронные запросы
2.4.    Регулярные выражения
2.5.    Фреймворк Vue.js
2.6.    Компоненты Vue.js
2.7.    JavaScript на сервере
2.8.    Тестирование и сборка

Interview
Подготовка к собеседованию Python-разработчика
    Python: синтаксис языка, базовые структуры данных, функциональное программирование
    Python: парадигма ООП, особенности и отличия от других ЯП
    Python: стандартная библиотека Python
    Django: основные понятия ORM, структура и особенности проектирования
    Django: AJAX, JavaScript, jQuery
    Базы данных: работа с БД в Python и Django. Особенности и различия
    Фреймворки PyQt и Kivy
    Linux: базовые навыки работы в серверной операционной системе

Методы сбора и обработки данных из сети Интернет
    Основы клиент-серверного взаимодействия.
    Парсинг API  
    Парсинг HTML. BeautifulSoup, MongoDB
    Системы управления базами данных MongoDB и SQLite в Python
    Парсинг HTML. XPath  
    Scrapy  
    Scrapy. Парсинг фото и файлов  
    Selenium в Python  
    Работа с данными

Авторизация в мессенджере через блокчейн

